
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMENTARIOS_UNA_LINEA COMENTARIOS_VARIAS_LINEAS ID_VARIABLE NUMERO OPERADOR_ASIGNACION SENTENCIA_LOGICA_CICLO SENTENCIA_LOGICA_MIENTRAS SENTENCIA_LOGICA_OPCIONES SENTENCIA_LOGICA_SI SENTENCIA_LOGICA_SINO SENTENCIA_RETORNO SENTENCIA_SALIDA_CICLOS SIMBOLO_APERTURA_ARREGLO SIMBOLO_APERTURA_BLOQUE SIMBOLO_CADENA_TEXTO SIMBOLO_CIERRE_ARREGLO SIMBOLO_CIERRE_BLOQUE SIMBOLO_DELIMITADOR_APERTURA SIMBOLO_DELIMITADOR_CIERRE SIMBOLO_FIN_LINEA SIMBOLO_OPCIONES SIMBOLO_OPERACION_ARITMETICA_DIVISION SIMBOLO_OPERACION_ARITMETICA_MAS SIMBOLO_OPERACION_ARITMETICA_MENOS SIMBOLO_OPERACION_ARITMETICA_MOD SIMBOLO_OPERACION_ARITMETICA_POR SIMBOLO_OPERACION_LOGICA_IGUAL SIMBOLO_OPERACION_LOGICA_MAYOR SIMBOLO_OPERACION_LOGICA_MAYOR_IGUAL SIMBOLO_OPERACION_LOGICA_MENOR SIMBOLO_OPERACION_LOGICA_MENOR_IGUAL SIMBOLO_OPERACION_LOGICA_NO_IGUAL TEXTO TIPO_DATO_BIN TIPO_DATO_DEC TIPO_DATO_ENT TIPO_DATO_TXTprogram : bloquebloque : sentenciasentencia : sentencia sentenciasentencia : sentenciasentencia : tipo_datotipo_dato : TIPO_DATO_ENT ID_VARIABLE OPERADOR_ASIGNACION NUMERO SIMBOLO_FIN_LINEAtipo_dato : TIPO_DATO_DEC ID_VARIABLEtipo_dato : TIPO_DATO_TXT ID_VARIABLE OPERADOR_ASIGNACION TEXTO SIMBOLO_FIN_LINEAtipo_dato : TIPO_DATO_BIN ID_VARIABLEasignacion : ID_VARIABLE OPERADOR_ASIGNACION NUMERO'
    
_lr_action_items = {'TIPO_DATO_ENT':([0,3,4,9,11,13,18,19,],[5,5,-5,5,-7,-9,-6,-8,]),'TIPO_DATO_DEC':([0,3,4,9,11,13,18,19,],[6,6,-5,6,-7,-9,-6,-8,]),'TIPO_DATO_TXT':([0,3,4,9,11,13,18,19,],[7,7,-5,7,-7,-9,-6,-8,]),'TIPO_DATO_BIN':([0,3,4,9,11,13,18,19,],[8,8,-5,8,-7,-9,-6,-8,]),'$end':([1,2,3,4,9,11,13,18,19,],[0,-1,-2,-5,-3,-7,-9,-6,-8,]),'ID_VARIABLE':([5,6,7,8,],[10,11,12,13,]),'OPERADOR_ASIGNACION':([10,12,],[14,15,]),'NUMERO':([14,],[16,]),'TEXTO':([15,],[17,]),'SIMBOLO_FIN_LINEA':([16,17,],[18,19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'bloque':([0,],[2,]),'sentencia':([0,3,9,],[3,9,9,]),'tipo_dato':([0,3,9,],[4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> bloque','program',1,'p_program','analizador_sintactico.py',26),
  ('bloque -> sentencia','bloque',1,'p_bloque','analizador_sintactico.py',32),
  ('sentencia -> sentencia sentencia','sentencia',2,'p_sentencia_multi','analizador_sintactico.py',37),
  ('sentencia -> sentencia','sentencia',1,'p_sentencia','analizador_sintactico.py',42),
  ('sentencia -> tipo_dato','sentencia',1,'p_sentencia_declara','analizador_sintactico.py',47),
  ('tipo_dato -> TIPO_DATO_ENT ID_VARIABLE OPERADOR_ASIGNACION NUMERO SIMBOLO_FIN_LINEA','tipo_dato',5,'p_tipo_dato_ent','analizador_sintactico.py',54),
  ('tipo_dato -> TIPO_DATO_DEC ID_VARIABLE','tipo_dato',2,'p_tipo_dato_dec','analizador_sintactico.py',59),
  ('tipo_dato -> TIPO_DATO_TXT ID_VARIABLE OPERADOR_ASIGNACION TEXTO SIMBOLO_FIN_LINEA','tipo_dato',5,'p_tipo_dato_txt','analizador_sintactico.py',64),
  ('tipo_dato -> TIPO_DATO_BIN ID_VARIABLE','tipo_dato',2,'p_tipo_dato_bin','analizador_sintactico.py',69),
  ('asignacion -> ID_VARIABLE OPERADOR_ASIGNACION NUMERO','asignacion',3,'p_asignacion_datos','analizador_sintactico.py',75),
]
